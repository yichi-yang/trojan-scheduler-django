# Generated by Django 3.0.1 on 2020-01-12 23:18

import courses.validators
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RequestData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coursebin', django.contrib.postgres.fields.jsonb.JSONField()),
                ('preference', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PD', 'Pending'), ('IP', 'In Progress'), ('DN', 'Done')], max_length=2)),
                ('request_data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='task', to='schedules.RequestData')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.PositiveIntegerField(validators=[courses.validators.validate_termcode])),
                ('sections', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), size=None)),
                ('early_score', models.FloatField()),
                ('late_score', models.FloatField()),
                ('break_score', models.FloatField()),
                ('reserved_score', models.FloatField()),
                ('total_score', models.FloatField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schedules', to='schedules.Task')),
            ],
        ),
    ]
